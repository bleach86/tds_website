name: Build and Deploy TDS Website

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: |
            target
          key: ${{ runner.os }}-cargo-build-stable-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-stable-release-

      - name: Cache Dioxus-CLI
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin/dx
          key: ${{ runner.os }}-dioxus-cli-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-dioxus-cli-
            ${{ runner.os }}-

      - name: Install Dioxus-CLI
        run: |
          if ! command -v dx &> /dev/null; then
            cargo install dioxus-cli
          else
            echo "Dioxus-CLI is already installed"
          fi

      - name: Build Project üéÅ
        run: |
          dx build --release
          cp ./target/dx/tds_site/release/web/public/index.html ./target/dx/tds_site/release/web/public/404.html

      - name: Upload GitHub Pages artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          # Artifact name
          name: github-pages
          # Path of the directory containing the static assets.
          path: ./target/dx/tds_site/release/web/public

  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          path: ./target/dx/tds_site/release/web/public
